[
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "List all founders of retail_store",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'retail_store';"
  },
  {
    "input": "Find retail_store in Berlin with rating over 4.0",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='retail_store' AND LOWER(json_extract(row_data, '$.city'))=LOWER('Berlin') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.0;"
  },
  {
    "input": "Set default rating 5 for restaurant_company",
    "sql": "SELECT json_set(row_data, '$.rating', 5) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "List tech_startup verified true and rating >= 4.2",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='tech_startup' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 4.2;"
  },
  {
    "input": "List all phone numbers for retail_store",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'retail_store';"
  },
  {
    "input": "List all founders of software_company",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'software_company';"
  },
  {
    "input": "Get all nested uuids in retail_store",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='uuid';"
  },
  {
    "input": "Get software_company where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'software_company' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "List all founders of tech_startup",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Create JSON object of name and rating for all tech_startup",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Create JSON object of name and rating for all restaurant_company",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "List all phone numbers for tech_startup",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Show all leaf keys and values for tech_startup",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND type NOT IN ('object','array');"
  },
  {
    "input": "Find tech_startup in Chicago",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'tech_startup' AND LOWER(json_extract(row_data, '$.city')) = LOWER('Chicago');"
  },
  {
    "input": "Create JSON object of name and rating for all tech_startup",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "List all software_company names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Get tech_startup where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'tech_startup' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Find restaurant_company with nested keyword Berlin",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND value LIKE '%Berlin%';"
  },
  {
    "input": "Remove temporary_field from restaurant_company",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Get restaurant_company where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'restaurant_company' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "Find retail_store with verified field true",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='verified' AND value='true';"
  },
  {
    "input": "Count how many times email field appears in restaurant_company",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND key='email';"
  },
  {
    "input": "Create JSON object of name and rating for all software_company",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Group retail_store cities into JSON array",
    "sql": "SELECT json_group_array(DISTINCT json_extract(row_data, '$.city')) FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "List tech_startup verified true and rating >= 4.5",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='tech_startup' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 4.5;"
  },
  {
    "input": "Find retail_store in London with rating over 3.5",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='retail_store' AND LOWER(json_extract(row_data, '$.city'))=LOWER('London') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 3.5;"
  },
  {
    "input": "Aggregate all tech_startup names into JSON array",
    "sql": "SELECT json_group_array(json_extract(row_data, '$.name')) FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "List all founders of retail_store",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'retail_store';"
  },
  {
    "input": "Create JSON object of name and rating for all software_company",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Pretty print JSON of first tech_startup",
    "sql": "SELECT json_pretty(row_data) FROM nosql_store WHERE table_name='tech_startup' LIMIT 1;"
  },
  {
    "input": "Get all nested uuids in restaurant_company",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND key='uuid';"
  },
  {
    "input": "Pretty print JSON of first tech_startup",
    "sql": "SELECT json_pretty(row_data) FROM nosql_store WHERE table_name='tech_startup' LIMIT 1;"
  },
  {
    "input": "Patch tech_startup with verified true",
    "sql": "SELECT json_patch(row_data, '{\"verified\":true}') FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Create JSON object of name and rating for all retail_store",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "Create JSON object of name and rating for all software_company",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Show retail_store with rating over 5.0",
    "sql": "SELECT json_extract(row_data, '$.name') AS name, json_extract(row_data, '$.rating') AS rating FROM nosql_store WHERE table_name = 'retail_store' AND CAST(json_extract(row_data, '$.rating') AS REAL) > 5.0;"
  },
  {
    "input": "Get restaurant_company where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'restaurant_company' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Create JSON object of name and rating for all tech_startup",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Get restaurant_company where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'restaurant_company' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Create JSON object of name and rating for all software_company",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Pretty print JSON of first tech_startup",
    "sql": "SELECT json_pretty(row_data) FROM nosql_store WHERE table_name='tech_startup' LIMIT 1;"
  },
  {
    "input": "Count how many times email field appears in retail_store",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='email';"
  },
  {
    "input": "Find restaurant_company with nested keyword Paris",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND value LIKE '%Paris%';"
  },
  {
    "input": "Count how many times email field appears in software_company",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'software_company' AND key='email';"
  },
  {
    "input": "Find software_company in Chicago with rating over 4.7",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='software_company' AND LOWER(json_extract(row_data, '$.city'))=LOWER('Chicago') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.7;"
  },
  {
    "input": "Count how many times email field appears in restaurant_company",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND key='email';"
  },
  {
    "input": "Set default rating 5 for tech_startup",
    "sql": "SELECT json_set(row_data, '$.rating', 5) FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "List all phone numbers for software_company",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'software_company';"
  },
  {
    "input": "List all founders of software_company",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'software_company';"
  },
  {
    "input": "Count how many times email field appears in retail_store",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='email';"
  },
  {
    "input": "Set default rating 5 for tech_startup",
    "sql": "SELECT json_set(row_data, '$.rating', 5) FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Find software_company with nested keyword Tokyo",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'software_company' AND value LIKE '%Tokyo%';"
  },
  {
    "input": "Remove temporary_field from software_company",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Get all nested uuids in restaurant_company",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND key='uuid';"
  },
  {
    "input": "Get software_company where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'software_company' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "List software_company verified true and rating >= 5.0",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='software_company' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 5.0;"
  },
  {
    "input": "Find restaurant_company with verified field true",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND key='verified' AND value='true';"
  },
  {
    "input": "Find retail_store with verified field true",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='verified' AND value='true';"
  },
  {
    "input": "Find restaurant_company in New York",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'restaurant_company' AND LOWER(json_extract(row_data, '$.city')) = LOWER('New York');"
  },
  {
    "input": "List all restaurant_company names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Count how many times email field appears in software_company",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'software_company' AND key='email';"
  },
  {
    "input": "Group tech_startup cities into JSON array",
    "sql": "SELECT json_group_array(DISTINCT json_extract(row_data, '$.city')) FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Find retail_store with nested keyword Woking",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND value LIKE '%Woking%';"
  },
  {
    "input": "Show all leaf keys and values for restaurant_company",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND type NOT IN ('object','array');"
  },
  {
    "input": "List all restaurant_company names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Create JSON object of name and rating for all tech_startup",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Get software_company where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'software_company' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "List all founders of restaurant_company",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Get all nested uuids in restaurant_company",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND key='uuid';"
  },
  {
    "input": "Find software_company in Woking",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'software_company' AND LOWER(json_extract(row_data, '$.city')) = LOWER('Woking');"
  },
  {
    "input": "Find software_company with verified field true",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'software_company' AND key='verified' AND value='true';"
  },
  {
    "input": "List tech_startup verified true and rating >= 4.7",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='tech_startup' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 4.7;"
  },
  {
    "input": "List all founders of tech_startup",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Create JSON object of name and rating for all tech_startup",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Get restaurant_company where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'restaurant_company' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "List all restaurant_company names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Get all nested uuids in tech_startup",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND key='uuid';"
  },
  {
    "input": "Find tech_startup in New York with rating over 4.0",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='tech_startup' AND LOWER(json_extract(row_data, '$.city'))=LOWER('New York') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.0;"
  },
  {
    "input": "Show retail_store with rating over 3.5",
    "sql": "SELECT json_extract(row_data, '$.name') AS name, json_extract(row_data, '$.rating') AS rating FROM nosql_store WHERE table_name = 'retail_store' AND CAST(json_extract(row_data, '$.rating') AS REAL) > 3.5;"
  },
  {
    "input": "Show all leaf keys and values for software_company",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'software_company' AND type NOT IN ('object','array');"
  },
  {
    "input": "Get retail_store where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'retail_store' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "Get tech_startup where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'tech_startup' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Count how many times email field appears in software_company",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'software_company' AND key='email';"
  },
  {
    "input": "Create JSON object of name and rating for all retail_store",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "Patch tech_startup with verified true",
    "sql": "SELECT json_patch(row_data, '{\"verified\":true}') FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Show all leaf keys and values for retail_store",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND type NOT IN ('object','array');"
  },
  {
    "input": "Show software_company with rating over 4.5",
    "sql": "SELECT json_extract(row_data, '$.name') AS name, json_extract(row_data, '$.rating') AS rating FROM nosql_store WHERE table_name = 'software_company' AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.5;"
  },
  {
    "input": "Get restaurant_company where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'restaurant_company' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Get software_company where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'software_company' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Create JSON object of name and rating for all restaurant_company",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Aggregate all tech_startup names into JSON array",
    "sql": "SELECT json_group_array(json_extract(row_data, '$.name')) FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Pretty print JSON of first retail_store",
    "sql": "SELECT json_pretty(row_data) FROM nosql_store WHERE table_name='retail_store' LIMIT 1;"
  },
  {
    "input": "List all founders of software_company",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'software_company';"
  },
  {
    "input": "Find software_company in San Francisco with rating over 4.0",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='software_company' AND LOWER(json_extract(row_data, '$.city'))=LOWER('San Francisco') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.0;"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Get retail_store where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'retail_store' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "Get all nested uuids in tech_startup",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND key='uuid';"
  },
  {
    "input": "List retail_store verified true and rating >= 3.5",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='retail_store' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 3.5;"
  },
  {
    "input": "List all restaurant_company names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Aggregate all restaurant_company names into JSON array",
    "sql": "SELECT json_group_array(json_extract(row_data, '$.name')) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Find retail_store in Paris",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'retail_store' AND LOWER(json_extract(row_data, '$.city')) = LOWER('Paris');"
  },
  {
    "input": "Get all nested uuids in retail_store",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='uuid';"
  },
  {
    "input": "Find tech_startup with verified field true",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND key='verified' AND value='true';"
  },
  {
    "input": "Pretty print JSON of first tech_startup",
    "sql": "SELECT json_pretty(row_data) FROM nosql_store WHERE table_name='tech_startup' LIMIT 1;"
  },
  {
    "input": "Find software_company in Tokyo",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'software_company' AND LOWER(json_extract(row_data, '$.city')) = LOWER('Tokyo');"
  },
  {
    "input": "List software_company verified true and rating >= 4.5",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='software_company' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 4.5;"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Remove temporary_field from software_company",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "List all founders of software_company",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'software_company';"
  },
  {
    "input": "Pretty print JSON of first tech_startup",
    "sql": "SELECT json_pretty(row_data) FROM nosql_store WHERE table_name='tech_startup' LIMIT 1;"
  },
  {
    "input": "Aggregate all restaurant_company names into JSON array",
    "sql": "SELECT json_group_array(json_extract(row_data, '$.name')) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Remove temporary_field from software_company",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Get restaurant_company where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'restaurant_company' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "Get retail_store where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'retail_store' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "Remove temporary_field from software_company",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Get tech_startup where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'tech_startup' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Get tech_startup where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'tech_startup' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Remove temporary_field from retail_store",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "List retail_store verified true and rating >= 3.5",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='retail_store' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 3.5;"
  },
  {
    "input": "Get tech_startup where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'tech_startup' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "List all phone numbers for tech_startup",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Count how many times email field appears in software_company",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'software_company' AND key='email';"
  },
  {
    "input": "Get retail_store where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'retail_store' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "Remove temporary_field from tech_startup",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Create JSON object of name and rating for all tech_startup",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "List all phone numbers for software_company",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'software_company';"
  },
  {
    "input": "Find restaurant_company in Chicago",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'restaurant_company' AND LOWER(json_extract(row_data, '$.city')) = LOWER('Chicago');"
  },
  {
    "input": "Count how many times email field appears in tech_startup",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND key='email';"
  },
  {
    "input": "Get restaurant_company where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'restaurant_company' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "Count how many times email field appears in tech_startup",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND key='email';"
  },
  {
    "input": "Pretty print JSON of first software_company",
    "sql": "SELECT json_pretty(row_data) FROM nosql_store WHERE table_name='software_company' LIMIT 1;"
  },
  {
    "input": "Get retail_store where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'retail_store' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Group software_company cities into JSON array",
    "sql": "SELECT json_group_array(DISTINCT json_extract(row_data, '$.city')) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "List restaurant_company verified true and rating >= 4.0",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='restaurant_company' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 4.0;"
  },
  {
    "input": "Get all nested uuids in retail_store",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='uuid';"
  },
  {
    "input": "Patch retail_store with verified true",
    "sql": "SELECT json_patch(row_data, '{\"verified\":true}') FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "Get all nested uuids in retail_store",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='uuid';"
  },
  {
    "input": "Get restaurant_company where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'restaurant_company' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "Find retail_store in San Francisco",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'retail_store' AND LOWER(json_extract(row_data, '$.city')) = LOWER('San Francisco');"
  },
  {
    "input": "Get restaurant_company where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'restaurant_company' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "Aggregate all software_company names into JSON array",
    "sql": "SELECT json_group_array(json_extract(row_data, '$.name')) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "List all founders of retail_store",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'retail_store';"
  },
  {
    "input": "Find restaurant_company with nested keyword Woking",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND value LIKE '%Woking%';"
  },
  {
    "input": "Find restaurant_company with verified field true",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND key='verified' AND value='true';"
  },
  {
    "input": "Find retail_store with verified field true",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='verified' AND value='true';"
  },
  {
    "input": "Find restaurant_company with nested keyword Chicago",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND value LIKE '%Chicago%';"
  },
  {
    "input": "List tech_startup verified true and rating >= 5.0",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='tech_startup' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 5.0;"
  },
  {
    "input": "Find software_company in Paris with rating over 4.7",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='software_company' AND LOWER(json_extract(row_data, '$.city'))=LOWER('Paris') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.7;"
  },
  {
    "input": "List all retail_store names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "Show retail_store with rating over 5.0",
    "sql": "SELECT json_extract(row_data, '$.name') AS name, json_extract(row_data, '$.rating') AS rating FROM nosql_store WHERE table_name = 'retail_store' AND CAST(json_extract(row_data, '$.rating') AS REAL) > 5.0;"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Find retail_store in Tokyo with rating over 4.2",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='retail_store' AND LOWER(json_extract(row_data, '$.city'))=LOWER('Tokyo') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.2;"
  },
  {
    "input": "Find tech_startup with nested keyword Berlin",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND value LIKE '%Berlin%';"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Get restaurant_company where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'restaurant_company' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "List all retail_store names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "List all phone numbers for retail_store",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'retail_store';"
  },
  {
    "input": "Create JSON object of name and rating for all restaurant_company",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "List all retail_store names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "Remove temporary_field from retail_store",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "Get all nested uuids in software_company",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'software_company' AND key='uuid';"
  },
  {
    "input": "Show all leaf keys and values for retail_store",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND type NOT IN ('object','array');"
  },
  {
    "input": "Remove temporary_field from tech_startup",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Group software_company cities into JSON array",
    "sql": "SELECT json_group_array(DISTINCT json_extract(row_data, '$.city')) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Aggregate all restaurant_company names into JSON array",
    "sql": "SELECT json_group_array(json_extract(row_data, '$.name')) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Get tech_startup where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'tech_startup' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "Show retail_store with rating over 4.5",
    "sql": "SELECT json_extract(row_data, '$.name') AS name, json_extract(row_data, '$.rating') AS rating FROM nosql_store WHERE table_name = 'retail_store' AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.5;"
  },
  {
    "input": "Get tech_startup where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'tech_startup' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "Aggregate all tech_startup names into JSON array",
    "sql": "SELECT json_group_array(json_extract(row_data, '$.name')) FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Get all nested uuids in tech_startup",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND key='uuid';"
  },
  {
    "input": "Count how many times email field appears in retail_store",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='email';"
  },
  {
    "input": "List retail_store verified true and rating >= 4.5",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='retail_store' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 4.5;"
  },
  {
    "input": "Find software_company in Tokyo with rating over 5.0",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='software_company' AND LOWER(json_extract(row_data, '$.city'))=LOWER('Tokyo') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 5.0;"
  },
  {
    "input": "List restaurant_company verified true and rating >= 5.0",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='restaurant_company' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 5.0;"
  },
  {
    "input": "Group tech_startup cities into JSON array",
    "sql": "SELECT json_group_array(DISTINCT json_extract(row_data, '$.city')) FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Remove temporary_field from restaurant_company",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Find retail_store with verified field true",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='verified' AND value='true';"
  },
  {
    "input": "Show software_company with rating over 5.0",
    "sql": "SELECT json_extract(row_data, '$.name') AS name, json_extract(row_data, '$.rating') AS rating FROM nosql_store WHERE table_name = 'software_company' AND CAST(json_extract(row_data, '$.rating') AS REAL) > 5.0;"
  },
  {
    "input": "Find retail_store with verified field true",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='verified' AND value='true';"
  },
  {
    "input": "Find tech_startup with nested keyword Berlin",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND value LIKE '%Berlin%';"
  },
  {
    "input": "List all phone numbers for tech_startup",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Get all nested uuids in software_company",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'software_company' AND key='uuid';"
  },
  {
    "input": "Get all nested uuids in software_company",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'software_company' AND key='uuid';"
  },
  {
    "input": "Find restaurant_company with verified field true",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND key='verified' AND value='true';"
  },
  {
    "input": "Show all leaf keys and values for restaurant_company",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND type NOT IN ('object','array');"
  },
  {
    "input": "Remove temporary_field from restaurant_company",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "List software_company verified true and rating >= 4.0",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='software_company' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 4.0;"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "List all phone numbers for restaurant_company",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Show software_company with rating over 4.5",
    "sql": "SELECT json_extract(row_data, '$.name') AS name, json_extract(row_data, '$.rating') AS rating FROM nosql_store WHERE table_name = 'software_company' AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.5;"
  },
  {
    "input": "Show software_company with rating over 4.7",
    "sql": "SELECT json_extract(row_data, '$.name') AS name, json_extract(row_data, '$.rating') AS rating FROM nosql_store WHERE table_name = 'software_company' AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.7;"
  },
  {
    "input": "Find software_company with nested keyword Berlin",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'software_company' AND value LIKE '%Berlin%';"
  },
  {
    "input": "Patch software_company with verified true",
    "sql": "SELECT json_patch(row_data, '{\"verified\":true}') FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Group software_company cities into JSON array",
    "sql": "SELECT json_group_array(DISTINCT json_extract(row_data, '$.city')) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Find software_company in Chicago",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'software_company' AND LOWER(json_extract(row_data, '$.city')) = LOWER('Chicago');"
  },
  {
    "input": "Aggregate all software_company names into JSON array",
    "sql": "SELECT json_group_array(json_extract(row_data, '$.name')) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Group retail_store cities into JSON array",
    "sql": "SELECT json_group_array(DISTINCT json_extract(row_data, '$.city')) FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "Remove temporary_field from restaurant_company",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Find retail_store in San Francisco",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'retail_store' AND LOWER(json_extract(row_data, '$.city')) = LOWER('San Francisco');"
  },
  {
    "input": "Aggregate all software_company names into JSON array",
    "sql": "SELECT json_group_array(json_extract(row_data, '$.name')) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Create JSON object of name and rating for all tech_startup",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Group restaurant_company cities into JSON array",
    "sql": "SELECT json_group_array(DISTINCT json_extract(row_data, '$.city')) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Show tech_startup with rating over 5.0",
    "sql": "SELECT json_extract(row_data, '$.name') AS name, json_extract(row_data, '$.rating') AS rating FROM nosql_store WHERE table_name = 'tech_startup' AND CAST(json_extract(row_data, '$.rating') AS REAL) > 5.0;"
  },
  {
    "input": "Set default rating 5 for restaurant_company",
    "sql": "SELECT json_set(row_data, '$.rating', 5) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Find retail_store in Chicago",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'retail_store' AND LOWER(json_extract(row_data, '$.city')) = LOWER('Chicago');"
  },
  {
    "input": "Pretty print JSON of first tech_startup",
    "sql": "SELECT json_pretty(row_data) FROM nosql_store WHERE table_name='tech_startup' LIMIT 1;"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Show tech_startup with rating over 4.7",
    "sql": "SELECT json_extract(row_data, '$.name') AS name, json_extract(row_data, '$.rating') AS rating FROM nosql_store WHERE table_name = 'tech_startup' AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.7;"
  },
  {
    "input": "Set default rating 5 for retail_store",
    "sql": "SELECT json_set(row_data, '$.rating', 5) FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "List tech_startup verified true and rating >= 5.0",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='tech_startup' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 5.0;"
  },
  {
    "input": "Find retail_store with verified field true",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='verified' AND value='true';"
  },
  {
    "input": "List all phone numbers for retail_store",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'retail_store';"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Find restaurant_company in Berlin with rating over 5.0",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='restaurant_company' AND LOWER(json_extract(row_data, '$.city'))=LOWER('Berlin') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 5.0;"
  },
  {
    "input": "List restaurant_company verified true and rating >= 3.5",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='restaurant_company' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 3.5;"
  },
  {
    "input": "Show all leaf keys and values for tech_startup",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND type NOT IN ('object','array');"
  },
  {
    "input": "Get software_company where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'software_company' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "Patch tech_startup with verified true",
    "sql": "SELECT json_patch(row_data, '{\"verified\":true}') FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Group restaurant_company cities into JSON array",
    "sql": "SELECT json_group_array(DISTINCT json_extract(row_data, '$.city')) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Group software_company cities into JSON array",
    "sql": "SELECT json_group_array(DISTINCT json_extract(row_data, '$.city')) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Count how many times email field appears in software_company",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'software_company' AND key='email';"
  },
  {
    "input": "List software_company verified true and rating >= 4.2",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='software_company' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 4.2;"
  },
  {
    "input": "Find tech_startup with nested keyword New York",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND value LIKE '%New York%';"
  },
  {
    "input": "List restaurant_company verified true and rating >= 4.5",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='restaurant_company' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 4.5;"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "List all restaurant_company names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Find software_company in San Francisco with rating over 5.0",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='software_company' AND LOWER(json_extract(row_data, '$.city'))=LOWER('San Francisco') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 5.0;"
  },
  {
    "input": "Get retail_store where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'retail_store' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "Pretty print JSON of first retail_store",
    "sql": "SELECT json_pretty(row_data) FROM nosql_store WHERE table_name='retail_store' LIMIT 1;"
  },
  {
    "input": "Get software_company where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'software_company' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Pretty print JSON of first retail_store",
    "sql": "SELECT json_pretty(row_data) FROM nosql_store WHERE table_name='retail_store' LIMIT 1;"
  },
  {
    "input": "Get restaurant_company where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'restaurant_company' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Aggregate all restaurant_company names into JSON array",
    "sql": "SELECT json_group_array(json_extract(row_data, '$.name')) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "List all retail_store names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "Count how many times email field appears in software_company",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'software_company' AND key='email';"
  },
  {
    "input": "Get restaurant_company where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'restaurant_company' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "List retail_store verified true and rating >= 5.0",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='retail_store' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 5.0;"
  },
  {
    "input": "Find retail_store with verified field true",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='verified' AND value='true';"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Create JSON object of name and rating for all restaurant_company",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Create JSON object of name and rating for all restaurant_company",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Remove temporary_field from restaurant_company",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "List all restaurant_company names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Patch retail_store with verified true",
    "sql": "SELECT json_patch(row_data, '{\"verified\":true}') FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "List all phone numbers for software_company",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'software_company';"
  },
  {
    "input": "Patch retail_store with verified true",
    "sql": "SELECT json_patch(row_data, '{\"verified\":true}') FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "Get restaurant_company where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'restaurant_company' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Create JSON object of name and rating for all restaurant_company",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Aggregate all software_company names into JSON array",
    "sql": "SELECT json_group_array(json_extract(row_data, '$.name')) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Find tech_startup in Woking with rating over 3.5",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='tech_startup' AND LOWER(json_extract(row_data, '$.city'))=LOWER('Woking') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 3.5;"
  },
  {
    "input": "List all tech_startup names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "List all founders of tech_startup",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Count how many times email field appears in tech_startup",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND key='email';"
  },
  {
    "input": "Remove temporary_field from restaurant_company",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "List all phone numbers for tech_startup",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Count how many times email field appears in retail_store",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='email';"
  },
  {
    "input": "Count how many times email field appears in software_company",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'software_company' AND key='email';"
  },
  {
    "input": "Find restaurant_company with verified field true",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND key='verified' AND value='true';"
  },
  {
    "input": "Find retail_store in Woking with rating over 3.5",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='retail_store' AND LOWER(json_extract(row_data, '$.city'))=LOWER('Woking') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 3.5;"
  },
  {
    "input": "Group software_company cities into JSON array",
    "sql": "SELECT json_group_array(DISTINCT json_extract(row_data, '$.city')) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "List all founders of restaurant_company",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "List all phone numbers for retail_store",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'retail_store';"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "List all phone numbers for restaurant_company",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Remove temporary_field from restaurant_company",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Group tech_startup cities into JSON array",
    "sql": "SELECT json_group_array(DISTINCT json_extract(row_data, '$.city')) FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "List restaurant_company verified true and rating >= 4.2",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='restaurant_company' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 4.2;"
  },
  {
    "input": "List all phone numbers for retail_store",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'retail_store';"
  },
  {
    "input": "Find restaurant_company in Paris with rating over 4.5",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='restaurant_company' AND LOWER(json_extract(row_data, '$.city'))=LOWER('Paris') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.5;"
  },
  {
    "input": "Aggregate all retail_store names into JSON array",
    "sql": "SELECT json_group_array(json_extract(row_data, '$.name')) FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "Create JSON object of name and rating for all tech_startup",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Remove temporary_field from tech_startup",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "List all phone numbers for retail_store",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'retail_store';"
  },
  {
    "input": "Find restaurant_company in Tokyo with rating over 4.7",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='restaurant_company' AND LOWER(json_extract(row_data, '$.city'))=LOWER('Tokyo') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.7;"
  },
  {
    "input": "Find software_company in San Francisco with rating over 4.5",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='software_company' AND LOWER(json_extract(row_data, '$.city'))=LOWER('San Francisco') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.5;"
  },
  {
    "input": "List all founders of tech_startup",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Patch restaurant_company with verified true",
    "sql": "SELECT json_patch(row_data, '{\"verified\":true}') FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Find restaurant_company with nested keyword Woking",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND value LIKE '%Woking%';"
  },
  {
    "input": "Find retail_store with nested keyword Chicago",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND value LIKE '%Chicago%';"
  },
  {
    "input": "List all software_company names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Get restaurant_company where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'restaurant_company' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "Get all nested uuids in restaurant_company",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND key='uuid';"
  },
  {
    "input": "Remove temporary_field from tech_startup",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Create JSON object of name and rating for all retail_store",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "Find restaurant_company in Paris with rating over 3.5",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='restaurant_company' AND LOWER(json_extract(row_data, '$.city'))=LOWER('Paris') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 3.5;"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "List all retail_store names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "Pretty print JSON of first tech_startup",
    "sql": "SELECT json_pretty(row_data) FROM nosql_store WHERE table_name='tech_startup' LIMIT 1;"
  },
  {
    "input": "Get software_company where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'software_company' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "Aggregate all tech_startup names into JSON array",
    "sql": "SELECT json_group_array(json_extract(row_data, '$.name')) FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "List all restaurant_company names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "List all founders of retail_store",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'retail_store';"
  },
  {
    "input": "Find retail_store in San Francisco with rating over 5.0",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='retail_store' AND LOWER(json_extract(row_data, '$.city'))=LOWER('San Francisco') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 5.0;"
  },
  {
    "input": "List all founders of restaurant_company",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Show all leaf keys and values for retail_store",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND type NOT IN ('object','array');"
  },
  {
    "input": "Create JSON object of name and rating for all restaurant_company",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Aggregate all restaurant_company names into JSON array",
    "sql": "SELECT json_group_array(json_extract(row_data, '$.name')) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "List all phone numbers for retail_store",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'retail_store';"
  },
  {
    "input": "List all phone numbers for tech_startup",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Remove temporary_field from software_company",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Patch restaurant_company with verified true",
    "sql": "SELECT json_patch(row_data, '{\"verified\":true}') FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Find restaurant_company in London",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'restaurant_company' AND LOWER(json_extract(row_data, '$.city')) = LOWER('London');"
  },
  {
    "input": "Create JSON object of name and rating for all software_company",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Find tech_startup with nested keyword New York",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND value LIKE '%New York%';"
  },
  {
    "input": "Show software_company with rating over 4.0",
    "sql": "SELECT json_extract(row_data, '$.name') AS name, json_extract(row_data, '$.rating') AS rating FROM nosql_store WHERE table_name = 'software_company' AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.0;"
  },
  {
    "input": "List software_company verified true and rating >= 4.0",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='software_company' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 4.0;"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Show all leaf keys and values for retail_store",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND type NOT IN ('object','array');"
  },
  {
    "input": "Set default rating 5 for software_company",
    "sql": "SELECT json_set(row_data, '$.rating', 5) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Set default rating 5 for tech_startup",
    "sql": "SELECT json_set(row_data, '$.rating', 5) FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Pretty print JSON of first retail_store",
    "sql": "SELECT json_pretty(row_data) FROM nosql_store WHERE table_name='retail_store' LIMIT 1;"
  },
  {
    "input": "Create JSON object of name and rating for all restaurant_company",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "List restaurant_company verified true and rating >= 4.2",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='restaurant_company' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 4.2;"
  },
  {
    "input": "Group restaurant_company cities into JSON array",
    "sql": "SELECT json_group_array(DISTINCT json_extract(row_data, '$.city')) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Get all nested uuids in retail_store",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='uuid';"
  },
  {
    "input": "Find restaurant_company with verified field true",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND key='verified' AND value='true';"
  },
  {
    "input": "Show retail_store with rating over 5.0",
    "sql": "SELECT json_extract(row_data, '$.name') AS name, json_extract(row_data, '$.rating') AS rating FROM nosql_store WHERE table_name = 'retail_store' AND CAST(json_extract(row_data, '$.rating') AS REAL) > 5.0;"
  },
  {
    "input": "Remove temporary_field from tech_startup",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Count how many times email field appears in retail_store",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='email';"
  },
  {
    "input": "Find restaurant_company in Paris with rating over 5.0",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='restaurant_company' AND LOWER(json_extract(row_data, '$.city'))=LOWER('Paris') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 5.0;"
  },
  {
    "input": "List all phone numbers for tech_startup",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'tech_startup';"
  },
  {
    "input": "List all software_company names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "List all founders of software_company",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'software_company';"
  },
  {
    "input": "Group restaurant_company cities into JSON array",
    "sql": "SELECT json_group_array(DISTINCT json_extract(row_data, '$.city')) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Group software_company cities into JSON array",
    "sql": "SELECT json_group_array(DISTINCT json_extract(row_data, '$.city')) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Show all leaf keys and values for retail_store",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND type NOT IN ('object','array');"
  },
  {
    "input": "List tech_startup verified true and rating >= 4.2",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='tech_startup' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 4.2;"
  },
  {
    "input": "List all founders of restaurant_company",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Aggregate all restaurant_company names into JSON array",
    "sql": "SELECT json_group_array(json_extract(row_data, '$.name')) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Pretty print JSON of first tech_startup",
    "sql": "SELECT json_pretty(row_data) FROM nosql_store WHERE table_name='tech_startup' LIMIT 1;"
  },
  {
    "input": "Show all leaf keys and values for tech_startup",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND type NOT IN ('object','array');"
  },
  {
    "input": "List all software_company names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Find tech_startup in London",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'tech_startup' AND LOWER(json_extract(row_data, '$.city')) = LOWER('London');"
  },
  {
    "input": "Find restaurant_company in London with rating over 4.5",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='restaurant_company' AND LOWER(json_extract(row_data, '$.city'))=LOWER('London') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.5;"
  },
  {
    "input": "Show software_company with rating over 4.7",
    "sql": "SELECT json_extract(row_data, '$.name') AS name, json_extract(row_data, '$.rating') AS rating FROM nosql_store WHERE table_name = 'software_company' AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.7;"
  },
  {
    "input": "Group restaurant_company cities into JSON array",
    "sql": "SELECT json_group_array(DISTINCT json_extract(row_data, '$.city')) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Find restaurant_company in Woking with rating over 3.5",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='restaurant_company' AND LOWER(json_extract(row_data, '$.city'))=LOWER('Woking') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 3.5;"
  },
  {
    "input": "Get tech_startup where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'tech_startup' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "List restaurant_company verified true and rating >= 4.7",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='restaurant_company' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 4.7;"
  },
  {
    "input": "Show restaurant_company with rating over 4.7",
    "sql": "SELECT json_extract(row_data, '$.name') AS name, json_extract(row_data, '$.rating') AS rating FROM nosql_store WHERE table_name = 'restaurant_company' AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.7;"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Show all leaf keys and values for software_company",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'software_company' AND type NOT IN ('object','array');"
  },
  {
    "input": "Create JSON object of name and rating for all restaurant_company",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "List all founders of software_company",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'software_company';"
  },
  {
    "input": "Find restaurant_company in London with rating over 4.0",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='restaurant_company' AND LOWER(json_extract(row_data, '$.city'))=LOWER('London') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.0;"
  },
  {
    "input": "Count how many times email field appears in retail_store",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='email';"
  },
  {
    "input": "List restaurant_company verified true and rating >= 5.0",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='restaurant_company' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 5.0;"
  },
  {
    "input": "Set default rating 5 for tech_startup",
    "sql": "SELECT json_set(row_data, '$.rating', 5) FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "List all phone numbers for software_company",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'software_company';"
  },
  {
    "input": "Find tech_startup in London",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'tech_startup' AND LOWER(json_extract(row_data, '$.city')) = LOWER('London');"
  },
  {
    "input": "Group software_company cities into JSON array",
    "sql": "SELECT json_group_array(DISTINCT json_extract(row_data, '$.city')) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Patch retail_store with verified true",
    "sql": "SELECT json_patch(row_data, '{\"verified\":true}') FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "Get retail_store where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'retail_store' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "Find software_company in New York",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'software_company' AND LOWER(json_extract(row_data, '$.city')) = LOWER('New York');"
  },
  {
    "input": "List all software_company names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Find restaurant_company in New York",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'restaurant_company' AND LOWER(json_extract(row_data, '$.city')) = LOWER('New York');"
  },
  {
    "input": "Show restaurant_company with rating over 4.2",
    "sql": "SELECT json_extract(row_data, '$.name') AS name, json_extract(row_data, '$.rating') AS rating FROM nosql_store WHERE table_name = 'restaurant_company' AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.2;"
  },
  {
    "input": "Find software_company with nested keyword Paris",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'software_company' AND value LIKE '%Paris%';"
  },
  {
    "input": "List all founders of retail_store",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'retail_store';"
  },
  {
    "input": "Count how many times email field appears in restaurant_company",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND key='email';"
  },
  {
    "input": "Show retail_store with rating over 5.0",
    "sql": "SELECT json_extract(row_data, '$.name') AS name, json_extract(row_data, '$.rating') AS rating FROM nosql_store WHERE table_name = 'retail_store' AND CAST(json_extract(row_data, '$.rating') AS REAL) > 5.0;"
  },
  {
    "input": "Group software_company cities into JSON array",
    "sql": "SELECT json_group_array(DISTINCT json_extract(row_data, '$.city')) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Aggregate all restaurant_company names into JSON array",
    "sql": "SELECT json_group_array(json_extract(row_data, '$.name')) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Get retail_store where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'retail_store' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "Show all leaf keys and values for retail_store",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND type NOT IN ('object','array');"
  },
  {
    "input": "Remove temporary_field from tech_startup",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "List tech_startup verified true and rating >= 4.0",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='tech_startup' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 4.0;"
  },
  {
    "input": "Get software_company where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'software_company' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Count how many times email field appears in tech_startup",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND key='email';"
  },
  {
    "input": "Show all leaf keys and values for restaurant_company",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND type NOT IN ('object','array');"
  },
  {
    "input": "Find restaurant_company in New York with rating over 4.5",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='restaurant_company' AND LOWER(json_extract(row_data, '$.city'))=LOWER('New York') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.5;"
  },
  {
    "input": "List software_company verified true and rating >= 3.5",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='software_company' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 3.5;"
  },
  {
    "input": "List all founders of software_company",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'software_company';"
  },
  {
    "input": "Show software_company with rating over 5.0",
    "sql": "SELECT json_extract(row_data, '$.name') AS name, json_extract(row_data, '$.rating') AS rating FROM nosql_store WHERE table_name = 'software_company' AND CAST(json_extract(row_data, '$.rating') AS REAL) > 5.0;"
  },
  {
    "input": "Create JSON object of name and rating for all tech_startup",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Find software_company in Woking",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'software_company' AND LOWER(json_extract(row_data, '$.city')) = LOWER('Woking');"
  },
  {
    "input": "Aggregate all retail_store names into JSON array",
    "sql": "SELECT json_group_array(json_extract(row_data, '$.name')) FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Remove temporary_field from tech_startup",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Group restaurant_company cities into JSON array",
    "sql": "SELECT json_group_array(DISTINCT json_extract(row_data, '$.city')) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Get restaurant_company where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'restaurant_company' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Count how many times email field appears in tech_startup",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND key='email';"
  },
  {
    "input": "Set default rating 5 for software_company",
    "sql": "SELECT json_set(row_data, '$.rating', 5) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "List all phone numbers for retail_store",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'retail_store';"
  },
  {
    "input": "Set default rating 5 for software_company",
    "sql": "SELECT json_set(row_data, '$.rating', 5) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Get software_company where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'software_company' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "Pretty print JSON of first retail_store",
    "sql": "SELECT json_pretty(row_data) FROM nosql_store WHERE table_name='retail_store' LIMIT 1;"
  },
  {
    "input": "Set default rating 5 for restaurant_company",
    "sql": "SELECT json_set(row_data, '$.rating', 5) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "List all founders of restaurant_company",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Show restaurant_company with rating over 4.2",
    "sql": "SELECT json_extract(row_data, '$.name') AS name, json_extract(row_data, '$.rating') AS rating FROM nosql_store WHERE table_name = 'restaurant_company' AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.2;"
  },
  {
    "input": "Patch restaurant_company with verified true",
    "sql": "SELECT json_patch(row_data, '{\"verified\":true}') FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Find software_company in Woking",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'software_company' AND LOWER(json_extract(row_data, '$.city')) = LOWER('Woking');"
  },
  {
    "input": "Find restaurant_company with nested keyword Chicago",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND value LIKE '%Chicago%';"
  },
  {
    "input": "Patch retail_store with verified true",
    "sql": "SELECT json_patch(row_data, '{\"verified\":true}') FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "Count how many times email field appears in software_company",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'software_company' AND key='email';"
  },
  {
    "input": "Pretty print JSON of first tech_startup",
    "sql": "SELECT json_pretty(row_data) FROM nosql_store WHERE table_name='tech_startup' LIMIT 1;"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "List all phone numbers for retail_store",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'retail_store';"
  },
  {
    "input": "Get software_company where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'software_company' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Remove temporary_field from software_company",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "List all software_company names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "List all tech_startup names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Find tech_startup in Chicago",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'tech_startup' AND LOWER(json_extract(row_data, '$.city')) = LOWER('Chicago');"
  },
  {
    "input": "Remove temporary_field from tech_startup",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Remove temporary_field from retail_store",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Find software_company with nested keyword San Francisco",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'software_company' AND value LIKE '%San Francisco%';"
  },
  {
    "input": "Find retail_store with nested keyword Paris",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND value LIKE '%Paris%';"
  },
  {
    "input": "Get restaurant_company where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'restaurant_company' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "Find retail_store in San Francisco",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'retail_store' AND LOWER(json_extract(row_data, '$.city')) = LOWER('San Francisco');"
  },
  {
    "input": "Pretty print JSON of first restaurant_company",
    "sql": "SELECT json_pretty(row_data) FROM nosql_store WHERE table_name='restaurant_company' LIMIT 1;"
  },
  {
    "input": "Find software_company in Tokyo",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'software_company' AND LOWER(json_extract(row_data, '$.city')) = LOWER('Tokyo');"
  },
  {
    "input": "Set default rating 5 for software_company",
    "sql": "SELECT json_set(row_data, '$.rating', 5) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Remove temporary_field from retail_store",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "List all restaurant_company names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Find retail_store in Tokyo",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'retail_store' AND LOWER(json_extract(row_data, '$.city')) = LOWER('Tokyo');"
  },
  {
    "input": "List all phone numbers for restaurant_company",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Aggregate all software_company names into JSON array",
    "sql": "SELECT json_group_array(json_extract(row_data, '$.name')) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Show all leaf keys and values for tech_startup",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND type NOT IN ('object','array');"
  },
  {
    "input": "Find software_company in Woking with rating over 3.5",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='software_company' AND LOWER(json_extract(row_data, '$.city'))=LOWER('Woking') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 3.5;"
  },
  {
    "input": "Find retail_store with nested keyword London",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND value LIKE '%London%';"
  },
  {
    "input": "List all founders of tech_startup",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Patch software_company with verified true",
    "sql": "SELECT json_patch(row_data, '{\"verified\":true}') FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Get restaurant_company where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'restaurant_company' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "Find restaurant_company with verified field true",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND key='verified' AND value='true';"
  },
  {
    "input": "List all founders of tech_startup",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Find restaurant_company in Tokyo with rating over 4.5",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='restaurant_company' AND LOWER(json_extract(row_data, '$.city'))=LOWER('Tokyo') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.5;"
  },
  {
    "input": "Find retail_store in Berlin",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'retail_store' AND LOWER(json_extract(row_data, '$.city')) = LOWER('Berlin');"
  },
  {
    "input": "Find software_company in New York with rating over 3.5",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='software_company' AND LOWER(json_extract(row_data, '$.city'))=LOWER('New York') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 3.5;"
  },
  {
    "input": "Get restaurant_company where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'restaurant_company' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "Show all leaf keys and values for tech_startup",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND type NOT IN ('object','array');"
  },
  {
    "input": "Aggregate all software_company names into JSON array",
    "sql": "SELECT json_group_array(json_extract(row_data, '$.name')) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Find retail_store in Paris",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'retail_store' AND LOWER(json_extract(row_data, '$.city')) = LOWER('Paris');"
  },
  {
    "input": "List all software_company names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Find retail_store in Chicago",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'retail_store' AND LOWER(json_extract(row_data, '$.city')) = LOWER('Chicago');"
  },
  {
    "input": "List all founders of software_company",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'software_company';"
  },
  {
    "input": "List all restaurant_company names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Show retail_store with rating over 4.0",
    "sql": "SELECT json_extract(row_data, '$.name') AS name, json_extract(row_data, '$.rating') AS rating FROM nosql_store WHERE table_name = 'retail_store' AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.0;"
  },
  {
    "input": "Pretty print JSON of first software_company",
    "sql": "SELECT json_pretty(row_data) FROM nosql_store WHERE table_name='software_company' LIMIT 1;"
  },
  {
    "input": "Show all leaf keys and values for tech_startup",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND type NOT IN ('object','array');"
  },
  {
    "input": "Find retail_store in Berlin",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'retail_store' AND LOWER(json_extract(row_data, '$.city')) = LOWER('Berlin');"
  },
  {
    "input": "Remove temporary_field from restaurant_company",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Group retail_store cities into JSON array",
    "sql": "SELECT json_group_array(DISTINCT json_extract(row_data, '$.city')) FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "List all phone numbers for software_company",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'software_company';"
  },
  {
    "input": "Get software_company where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'software_company' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Get restaurant_company where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'restaurant_company' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Count how many times email field appears in restaurant_company",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND key='email';"
  },
  {
    "input": "Get all nested uuids in retail_store",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='uuid';"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Show all leaf keys and values for restaurant_company",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND type NOT IN ('object','array');"
  },
  {
    "input": "Find tech_startup with nested keyword Berlin",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND value LIKE '%Berlin%';"
  },
  {
    "input": "List software_company verified true and rating >= 4.2",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='software_company' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 4.2;"
  },
  {
    "input": "Find retail_store in Tokyo",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'retail_store' AND LOWER(json_extract(row_data, '$.city')) = LOWER('Tokyo');"
  },
  {
    "input": "Show all leaf keys and values for retail_store",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND type NOT IN ('object','array');"
  },
  {
    "input": "Find retail_store with nested keyword Chicago",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND value LIKE '%Chicago%';"
  },
  {
    "input": "Count how many times email field appears in restaurant_company",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND key='email';"
  },
  {
    "input": "Count how many times email field appears in retail_store",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='email';"
  },
  {
    "input": "Count how many times email field appears in software_company",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'software_company' AND key='email';"
  },
  {
    "input": "Patch restaurant_company with verified true",
    "sql": "SELECT json_patch(row_data, '{\"verified\":true}') FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Get all nested uuids in retail_store",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='uuid';"
  },
  {
    "input": "Show restaurant_company with rating over 5.0",
    "sql": "SELECT json_extract(row_data, '$.name') AS name, json_extract(row_data, '$.rating') AS rating FROM nosql_store WHERE table_name = 'restaurant_company' AND CAST(json_extract(row_data, '$.rating') AS REAL) > 5.0;"
  },
  {
    "input": "List restaurant_company verified true and rating >= 4.0",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='restaurant_company' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 4.0;"
  },
  {
    "input": "Get all nested uuids in tech_startup",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND key='uuid';"
  },
  {
    "input": "Remove temporary_field from retail_store",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "List tech_startup verified true and rating >= 3.5",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='tech_startup' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 3.5;"
  },
  {
    "input": "Create JSON object of name and rating for all restaurant_company",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Pretty print JSON of first retail_store",
    "sql": "SELECT json_pretty(row_data) FROM nosql_store WHERE table_name='retail_store' LIMIT 1;"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Show software_company with rating over 4.7",
    "sql": "SELECT json_extract(row_data, '$.name') AS name, json_extract(row_data, '$.rating') AS rating FROM nosql_store WHERE table_name = 'software_company' AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.7;"
  },
  {
    "input": "Remove temporary_field from restaurant_company",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "List all founders of software_company",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'software_company';"
  },
  {
    "input": "Remove temporary_field from tech_startup",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Group tech_startup cities into JSON array",
    "sql": "SELECT json_group_array(DISTINCT json_extract(row_data, '$.city')) FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Get restaurant_company where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'restaurant_company' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "List all phone numbers for retail_store",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'retail_store';"
  },
  {
    "input": "Find restaurant_company with nested keyword Tokyo",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND value LIKE '%Tokyo%';"
  },
  {
    "input": "Show all leaf keys and values for restaurant_company",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND type NOT IN ('object','array');"
  },
  {
    "input": "List all retail_store names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "Get restaurant_company where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'restaurant_company' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "Get retail_store where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'retail_store' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Aggregate all tech_startup names into JSON array",
    "sql": "SELECT json_group_array(json_extract(row_data, '$.name')) FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Pretty print JSON of first restaurant_company",
    "sql": "SELECT json_pretty(row_data) FROM nosql_store WHERE table_name='restaurant_company' LIMIT 1;"
  },
  {
    "input": "Set default rating 5 for retail_store",
    "sql": "SELECT json_set(row_data, '$.rating', 5) FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Find restaurant_company with nested keyword Tokyo",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND value LIKE '%Tokyo%';"
  },
  {
    "input": "Get retail_store where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'retail_store' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "List retail_store verified true and rating >= 4.2",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='retail_store' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 4.2;"
  },
  {
    "input": "Find software_company with verified field true",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'software_company' AND key='verified' AND value='true';"
  },
  {
    "input": "Get software_company where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'software_company' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "List all founders of retail_store",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'retail_store';"
  },
  {
    "input": "Find software_company with verified field true",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'software_company' AND key='verified' AND value='true';"
  },
  {
    "input": "List all phone numbers for restaurant_company",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Find tech_startup in Chicago",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'tech_startup' AND LOWER(json_extract(row_data, '$.city')) = LOWER('Chicago');"
  },
  {
    "input": "Set default rating 5 for tech_startup",
    "sql": "SELECT json_set(row_data, '$.rating', 5) FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Get all nested uuids in software_company",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'software_company' AND key='uuid';"
  },
  {
    "input": "Pretty print JSON of first tech_startup",
    "sql": "SELECT json_pretty(row_data) FROM nosql_store WHERE table_name='tech_startup' LIMIT 1;"
  },
  {
    "input": "Pretty print JSON of first tech_startup",
    "sql": "SELECT json_pretty(row_data) FROM nosql_store WHERE table_name='tech_startup' LIMIT 1;"
  },
  {
    "input": "Get all nested uuids in tech_startup",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND key='uuid';"
  },
  {
    "input": "Show all leaf keys and values for retail_store",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND type NOT IN ('object','array');"
  },
  {
    "input": "Get software_company where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'software_company' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Find restaurant_company in London",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'restaurant_company' AND LOWER(json_extract(row_data, '$.city')) = LOWER('London');"
  },
  {
    "input": "List all founders of retail_store",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'retail_store';"
  },
  {
    "input": "Count how many times email field appears in restaurant_company",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND key='email';"
  },
  {
    "input": "Get all nested uuids in tech_startup",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND key='uuid';"
  },
  {
    "input": "Find restaurant_company in Paris with rating over 4.7",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='restaurant_company' AND LOWER(json_extract(row_data, '$.city'))=LOWER('Paris') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.7;"
  },
  {
    "input": "Pretty print JSON of first retail_store",
    "sql": "SELECT json_pretty(row_data) FROM nosql_store WHERE table_name='retail_store' LIMIT 1;"
  },
  {
    "input": "Count how many times email field appears in software_company",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'software_company' AND key='email';"
  },
  {
    "input": "Patch restaurant_company with verified true",
    "sql": "SELECT json_patch(row_data, '{\"verified\":true}') FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Remove temporary_field from restaurant_company",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Show all leaf keys and values for retail_store",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND type NOT IN ('object','array');"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "List all founders of retail_store",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'retail_store';"
  },
  {
    "input": "Remove temporary_field from retail_store",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "Find retail_store in Paris",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'retail_store' AND LOWER(json_extract(row_data, '$.city')) = LOWER('Paris');"
  },
  {
    "input": "Find retail_store in Berlin with rating over 4.7",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='retail_store' AND LOWER(json_extract(row_data, '$.city'))=LOWER('Berlin') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.7;"
  },
  {
    "input": "Patch tech_startup with verified true",
    "sql": "SELECT json_patch(row_data, '{\"verified\":true}') FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Get all nested uuids in tech_startup",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND key='uuid';"
  },
  {
    "input": "Find software_company in Chicago",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'software_company' AND LOWER(json_extract(row_data, '$.city')) = LOWER('Chicago');"
  },
  {
    "input": "Count how many times email field appears in software_company",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'software_company' AND key='email';"
  },
  {
    "input": "Group restaurant_company cities into JSON array",
    "sql": "SELECT json_group_array(DISTINCT json_extract(row_data, '$.city')) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Find software_company in Chicago",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'software_company' AND LOWER(json_extract(row_data, '$.city')) = LOWER('Chicago');"
  },
  {
    "input": "List all founders of retail_store",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'retail_store';"
  },
  {
    "input": "List all phone numbers for restaurant_company",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Find software_company in Tokyo with rating over 5.0",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='software_company' AND LOWER(json_extract(row_data, '$.city'))=LOWER('Tokyo') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 5.0;"
  },
  {
    "input": "Get software_company where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'software_company' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Remove temporary_field from restaurant_company",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "List all founders of retail_store",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'retail_store';"
  },
  {
    "input": "Get retail_store where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'retail_store' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "Patch tech_startup with verified true",
    "sql": "SELECT json_patch(row_data, '{\"verified\":true}') FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Find software_company in Berlin with rating over 4.2",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='software_company' AND LOWER(json_extract(row_data, '$.city'))=LOWER('Berlin') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.2;"
  },
  {
    "input": "Show restaurant_company with rating over 4.2",
    "sql": "SELECT json_extract(row_data, '$.name') AS name, json_extract(row_data, '$.rating') AS rating FROM nosql_store WHERE table_name = 'restaurant_company' AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.2;"
  },
  {
    "input": "Find software_company in Chicago",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'software_company' AND LOWER(json_extract(row_data, '$.city')) = LOWER('Chicago');"
  },
  {
    "input": "Find retail_store in Chicago with rating over 3.5",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='retail_store' AND LOWER(json_extract(row_data, '$.city'))=LOWER('Chicago') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 3.5;"
  },
  {
    "input": "List software_company verified true and rating >= 3.5",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='software_company' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 3.5;"
  },
  {
    "input": "Create JSON object of name and rating for all tech_startup",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Show all leaf keys and values for retail_store",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND type NOT IN ('object','array');"
  },
  {
    "input": "List all founders of tech_startup",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Find retail_store in New York",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'retail_store' AND LOWER(json_extract(row_data, '$.city')) = LOWER('New York');"
  },
  {
    "input": "Set default rating 5 for software_company",
    "sql": "SELECT json_set(row_data, '$.rating', 5) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Find software_company with nested keyword Berlin",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'software_company' AND value LIKE '%Berlin%';"
  },
  {
    "input": "Get restaurant_company where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'restaurant_company' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "Find restaurant_company in Chicago with rating over 5.0",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='restaurant_company' AND LOWER(json_extract(row_data, '$.city'))=LOWER('Chicago') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 5.0;"
  },
  {
    "input": "Get all nested uuids in retail_store",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='uuid';"
  },
  {
    "input": "List all founders of retail_store",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'retail_store';"
  },
  {
    "input": "List all founders of retail_store",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'retail_store';"
  },
  {
    "input": "Show all leaf keys and values for tech_startup",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND type NOT IN ('object','array');"
  },
  {
    "input": "Group retail_store cities into JSON array",
    "sql": "SELECT json_group_array(DISTINCT json_extract(row_data, '$.city')) FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Get all nested uuids in software_company",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'software_company' AND key='uuid';"
  },
  {
    "input": "Remove temporary_field from retail_store",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "Patch software_company with verified true",
    "sql": "SELECT json_patch(row_data, '{\"verified\":true}') FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Get all nested uuids in retail_store",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='uuid';"
  },
  {
    "input": "Get tech_startup where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'tech_startup' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "List all tech_startup names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Get software_company where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'software_company' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "Show all leaf keys and values for tech_startup",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND type NOT IN ('object','array');"
  },
  {
    "input": "List all software_company names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "List retail_store verified true and rating >= 5.0",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='retail_store' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 5.0;"
  },
  {
    "input": "List all phone numbers for retail_store",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'retail_store';"
  },
  {
    "input": "Get retail_store where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'retail_store' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "Aggregate all restaurant_company names into JSON array",
    "sql": "SELECT json_group_array(json_extract(row_data, '$.name')) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Find retail_store with verified field true",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='verified' AND value='true';"
  },
  {
    "input": "Show all leaf keys and values for software_company",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'software_company' AND type NOT IN ('object','array');"
  },
  {
    "input": "Set default rating 5 for restaurant_company",
    "sql": "SELECT json_set(row_data, '$.rating', 5) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Show all leaf keys and values for restaurant_company",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND type NOT IN ('object','array');"
  },
  {
    "input": "Get restaurant_company where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'restaurant_company' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Create JSON object of name and rating for all restaurant_company",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "List retail_store verified true and rating >= 4.2",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='retail_store' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 4.2;"
  },
  {
    "input": "List all phone numbers for retail_store",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'retail_store';"
  },
  {
    "input": "List all retail_store names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "List all tech_startup names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Show retail_store with rating over 4.0",
    "sql": "SELECT json_extract(row_data, '$.name') AS name, json_extract(row_data, '$.rating') AS rating FROM nosql_store WHERE table_name = 'retail_store' AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.0;"
  },
  {
    "input": "Get all nested uuids in tech_startup",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND key='uuid';"
  },
  {
    "input": "Get all nested uuids in restaurant_company",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND key='uuid';"
  },
  {
    "input": "Aggregate all restaurant_company names into JSON array",
    "sql": "SELECT json_group_array(json_extract(row_data, '$.name')) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Aggregate all software_company names into JSON array",
    "sql": "SELECT json_group_array(json_extract(row_data, '$.name')) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "List all phone numbers for retail_store",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'retail_store';"
  },
  {
    "input": "Aggregate all software_company names into JSON array",
    "sql": "SELECT json_group_array(json_extract(row_data, '$.name')) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "List software_company verified true and rating >= 4.0",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='software_company' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 4.0;"
  },
  {
    "input": "Pretty print JSON of first retail_store",
    "sql": "SELECT json_pretty(row_data) FROM nosql_store WHERE table_name='retail_store' LIMIT 1;"
  },
  {
    "input": "Set default rating 5 for software_company",
    "sql": "SELECT json_set(row_data, '$.rating', 5) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Group software_company cities into JSON array",
    "sql": "SELECT json_group_array(DISTINCT json_extract(row_data, '$.city')) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Get tech_startup where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'tech_startup' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Get tech_startup where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'tech_startup' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "Count how many times email field appears in software_company",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'software_company' AND key='email';"
  },
  {
    "input": "List tech_startup verified true and rating >= 5.0",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='tech_startup' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 5.0;"
  },
  {
    "input": "List all software_company names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Aggregate all tech_startup names into JSON array",
    "sql": "SELECT json_group_array(json_extract(row_data, '$.name')) FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Find software_company with nested keyword Woking",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'software_company' AND value LIKE '%Woking%';"
  },
  {
    "input": "Patch software_company with verified true",
    "sql": "SELECT json_patch(row_data, '{\"verified\":true}') FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Count how many times email field appears in restaurant_company",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND key='email';"
  },
  {
    "input": "Remove temporary_field from software_company",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Get all nested uuids in restaurant_company",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND key='uuid';"
  },
  {
    "input": "Get retail_store where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'retail_store' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "Remove temporary_field from software_company",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Set default rating 5 for tech_startup",
    "sql": "SELECT json_set(row_data, '$.rating', 5) FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Count how many times email field appears in restaurant_company",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND key='email';"
  },
  {
    "input": "Get all nested uuids in retail_store",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='uuid';"
  },
  {
    "input": "Get tech_startup where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'tech_startup' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "Count how many times email field appears in retail_store",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='email';"
  },
  {
    "input": "Count how many times email field appears in software_company",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'software_company' AND key='email';"
  },
  {
    "input": "Find restaurant_company in Paris",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'restaurant_company' AND LOWER(json_extract(row_data, '$.city')) = LOWER('Paris');"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Find retail_store in Chicago with rating over 4.5",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='retail_store' AND LOWER(json_extract(row_data, '$.city'))=LOWER('Chicago') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.5;"
  },
  {
    "input": "Patch restaurant_company with verified true",
    "sql": "SELECT json_patch(row_data, '{\"verified\":true}') FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Create JSON object of name and rating for all tech_startup",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Show restaurant_company with rating over 4.0",
    "sql": "SELECT json_extract(row_data, '$.name') AS name, json_extract(row_data, '$.rating') AS rating FROM nosql_store WHERE table_name = 'restaurant_company' AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.0;"
  },
  {
    "input": "Get software_company where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'software_company' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Patch tech_startup with verified true",
    "sql": "SELECT json_patch(row_data, '{\"verified\":true}') FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "List tech_startup verified true and rating >= 4.2",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='tech_startup' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 4.2;"
  },
  {
    "input": "List all phone numbers for retail_store",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'retail_store';"
  },
  {
    "input": "List all phone numbers for retail_store",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'retail_store';"
  },
  {
    "input": "Show all leaf keys and values for restaurant_company",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND type NOT IN ('object','array');"
  },
  {
    "input": "Remove temporary_field from retail_store",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "Find software_company in New York with rating over 3.5",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='software_company' AND LOWER(json_extract(row_data, '$.city'))=LOWER('New York') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 3.5;"
  },
  {
    "input": "List all founders of software_company",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'software_company';"
  },
  {
    "input": "Show all leaf keys and values for tech_startup",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND type NOT IN ('object','array');"
  },
  {
    "input": "List all phone numbers for retail_store",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'retail_store';"
  },
  {
    "input": "Find retail_store in Woking",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'retail_store' AND LOWER(json_extract(row_data, '$.city')) = LOWER('Woking');"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Show software_company with rating over 3.5",
    "sql": "SELECT json_extract(row_data, '$.name') AS name, json_extract(row_data, '$.rating') AS rating FROM nosql_store WHERE table_name = 'software_company' AND CAST(json_extract(row_data, '$.rating') AS REAL) > 3.5;"
  },
  {
    "input": "List software_company verified true and rating >= 5.0",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='software_company' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 5.0;"
  },
  {
    "input": "Find restaurant_company in New York",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'restaurant_company' AND LOWER(json_extract(row_data, '$.city')) = LOWER('New York');"
  },
  {
    "input": "Find restaurant_company in Woking with rating over 4.2",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='restaurant_company' AND LOWER(json_extract(row_data, '$.city'))=LOWER('Woking') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.2;"
  },
  {
    "input": "Get tech_startup where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'tech_startup' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "List tech_startup verified true and rating >= 3.5",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='tech_startup' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 3.5;"
  },
  {
    "input": "Find tech_startup with nested keyword Woking",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND value LIKE '%Woking%';"
  },
  {
    "input": "Group retail_store cities into JSON array",
    "sql": "SELECT json_group_array(DISTINCT json_extract(row_data, '$.city')) FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "Show tech_startup with rating over 4.5",
    "sql": "SELECT json_extract(row_data, '$.name') AS name, json_extract(row_data, '$.rating') AS rating FROM nosql_store WHERE table_name = 'tech_startup' AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.5;"
  },
  {
    "input": "Find restaurant_company in San Francisco with rating over 3.5",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='restaurant_company' AND LOWER(json_extract(row_data, '$.city'))=LOWER('San Francisco') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 3.5;"
  },
  {
    "input": "Set default rating 5 for tech_startup",
    "sql": "SELECT json_set(row_data, '$.rating', 5) FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Find restaurant_company in Woking with rating over 4.0",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='restaurant_company' AND LOWER(json_extract(row_data, '$.city'))=LOWER('Woking') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.0;"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Find tech_startup in Berlin",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'tech_startup' AND LOWER(json_extract(row_data, '$.city')) = LOWER('Berlin');"
  },
  {
    "input": "Show all leaf keys and values for restaurant_company",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND type NOT IN ('object','array');"
  },
  {
    "input": "Group software_company cities into JSON array",
    "sql": "SELECT json_group_array(DISTINCT json_extract(row_data, '$.city')) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Show software_company with rating over 3.5",
    "sql": "SELECT json_extract(row_data, '$.name') AS name, json_extract(row_data, '$.rating') AS rating FROM nosql_store WHERE table_name = 'software_company' AND CAST(json_extract(row_data, '$.rating') AS REAL) > 3.5;"
  },
  {
    "input": "Remove temporary_field from tech_startup",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Find software_company with nested keyword Berlin",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'software_company' AND value LIKE '%Berlin%';"
  },
  {
    "input": "Get all nested uuids in retail_store",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='uuid';"
  },
  {
    "input": "Aggregate all tech_startup names into JSON array",
    "sql": "SELECT json_group_array(json_extract(row_data, '$.name')) FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Find tech_startup with verified field true",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND key='verified' AND value='true';"
  },
  {
    "input": "Get all nested uuids in restaurant_company",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND key='uuid';"
  },
  {
    "input": "Get tech_startup where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'tech_startup' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Get restaurant_company where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'restaurant_company' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Pretty print JSON of first software_company",
    "sql": "SELECT json_pretty(row_data) FROM nosql_store WHERE table_name='software_company' LIMIT 1;"
  },
  {
    "input": "List all phone numbers for software_company",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'software_company';"
  },
  {
    "input": "Show all leaf keys and values for retail_store",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND type NOT IN ('object','array');"
  },
  {
    "input": "Get all nested uuids in restaurant_company",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND key='uuid';"
  },
  {
    "input": "Aggregate all tech_startup names into JSON array",
    "sql": "SELECT json_group_array(json_extract(row_data, '$.name')) FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Remove temporary_field from software_company",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "List all founders of software_company",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'software_company';"
  },
  {
    "input": "Set default rating 5 for restaurant_company",
    "sql": "SELECT json_set(row_data, '$.rating', 5) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "List retail_store verified true and rating >= 5.0",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='retail_store' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 5.0;"
  },
  {
    "input": "Find restaurant_company in Tokyo",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'restaurant_company' AND LOWER(json_extract(row_data, '$.city')) = LOWER('Tokyo');"
  },
  {
    "input": "Create JSON object of name and rating for all restaurant_company",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Count how many times email field appears in tech_startup",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND key='email';"
  },
  {
    "input": "Find restaurant_company in Paris with rating over 4.7",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='restaurant_company' AND LOWER(json_extract(row_data, '$.city'))=LOWER('Paris') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.7;"
  },
  {
    "input": "Count how many times email field appears in retail_store",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='email';"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Get tech_startup where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'tech_startup' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Find retail_store in New York",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'retail_store' AND LOWER(json_extract(row_data, '$.city')) = LOWER('New York');"
  },
  {
    "input": "Pretty print JSON of first restaurant_company",
    "sql": "SELECT json_pretty(row_data) FROM nosql_store WHERE table_name='restaurant_company' LIMIT 1;"
  },
  {
    "input": "Get software_company where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'software_company' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Patch restaurant_company with verified true",
    "sql": "SELECT json_patch(row_data, '{\"verified\":true}') FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Find tech_startup with verified field true",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND key='verified' AND value='true';"
  },
  {
    "input": "List all software_company names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "List all founders of software_company",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'software_company';"
  },
  {
    "input": "List all phone numbers for retail_store",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'retail_store';"
  },
  {
    "input": "Set default rating 5 for retail_store",
    "sql": "SELECT json_set(row_data, '$.rating', 5) FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "List all tech_startup names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Show tech_startup with rating over 4.2",
    "sql": "SELECT json_extract(row_data, '$.name') AS name, json_extract(row_data, '$.rating') AS rating FROM nosql_store WHERE table_name = 'tech_startup' AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.2;"
  },
  {
    "input": "Get all nested uuids in retail_store",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='uuid';"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Get all nested uuids in tech_startup",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND key='uuid';"
  },
  {
    "input": "Show all leaf keys and values for tech_startup",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND type NOT IN ('object','array');"
  },
  {
    "input": "Remove temporary_field from retail_store",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "Show restaurant_company with rating over 5.0",
    "sql": "SELECT json_extract(row_data, '$.name') AS name, json_extract(row_data, '$.rating') AS rating FROM nosql_store WHERE table_name = 'restaurant_company' AND CAST(json_extract(row_data, '$.rating') AS REAL) > 5.0;"
  },
  {
    "input": "List all phone numbers for retail_store",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'retail_store';"
  },
  {
    "input": "Group retail_store cities into JSON array",
    "sql": "SELECT json_group_array(DISTINCT json_extract(row_data, '$.city')) FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "Count how many times email field appears in restaurant_company",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND key='email';"
  },
  {
    "input": "List all phone numbers for tech_startup",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Patch tech_startup with verified true",
    "sql": "SELECT json_patch(row_data, '{\"verified\":true}') FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Get software_company where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'software_company' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "Get all nested uuids in retail_store",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='uuid';"
  },
  {
    "input": "Get software_company where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'software_company' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Find tech_startup with nested keyword New York",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND value LIKE '%New York%';"
  },
  {
    "input": "Get retail_store where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'retail_store' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "List software_company verified true and rating >= 3.5",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='software_company' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 3.5;"
  },
  {
    "input": "Remove temporary_field from software_company",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Set default rating 5 for tech_startup",
    "sql": "SELECT json_set(row_data, '$.rating', 5) FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "List all founders of tech_startup",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Aggregate all software_company names into JSON array",
    "sql": "SELECT json_group_array(json_extract(row_data, '$.name')) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Get retail_store where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'retail_store' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Find tech_startup with nested keyword Berlin",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND value LIKE '%Berlin%';"
  },
  {
    "input": "Patch tech_startup with verified true",
    "sql": "SELECT json_patch(row_data, '{\"verified\":true}') FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Get all nested uuids in restaurant_company",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND key='uuid';"
  },
  {
    "input": "Count how many times email field appears in tech_startup",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND key='email';"
  },
  {
    "input": "Find tech_startup in Paris with rating over 4.7",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='tech_startup' AND LOWER(json_extract(row_data, '$.city'))=LOWER('Paris') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.7;"
  },
  {
    "input": "Create JSON object of name and rating for all tech_startup",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Get software_company where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'software_company' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Aggregate all retail_store names into JSON array",
    "sql": "SELECT json_group_array(json_extract(row_data, '$.name')) FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Pretty print JSON of first tech_startup",
    "sql": "SELECT json_pretty(row_data) FROM nosql_store WHERE table_name='tech_startup' LIMIT 1;"
  },
  {
    "input": "List all founders of retail_store",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'retail_store';"
  },
  {
    "input": "Count how many times email field appears in retail_store",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='email';"
  },
  {
    "input": "Pretty print JSON of first retail_store",
    "sql": "SELECT json_pretty(row_data) FROM nosql_store WHERE table_name='retail_store' LIMIT 1;"
  },
  {
    "input": "Aggregate all tech_startup names into JSON array",
    "sql": "SELECT json_group_array(json_extract(row_data, '$.name')) FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Get all nested uuids in restaurant_company",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND key='uuid';"
  },
  {
    "input": "Show tech_startup with rating over 3.5",
    "sql": "SELECT json_extract(row_data, '$.name') AS name, json_extract(row_data, '$.rating') AS rating FROM nosql_store WHERE table_name = 'tech_startup' AND CAST(json_extract(row_data, '$.rating') AS REAL) > 3.5;"
  },
  {
    "input": "Count how many times email field appears in retail_store",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='email';"
  },
  {
    "input": "Find software_company in Woking with rating over 5.0",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='software_company' AND LOWER(json_extract(row_data, '$.city'))=LOWER('Woking') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 5.0;"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Pretty print JSON of first tech_startup",
    "sql": "SELECT json_pretty(row_data) FROM nosql_store WHERE table_name='tech_startup' LIMIT 1;"
  },
  {
    "input": "Find retail_store with nested keyword London",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND value LIKE '%London%';"
  },
  {
    "input": "Aggregate all tech_startup names into JSON array",
    "sql": "SELECT json_group_array(json_extract(row_data, '$.name')) FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Count how many times email field appears in restaurant_company",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND key='email';"
  },
  {
    "input": "Group retail_store cities into JSON array",
    "sql": "SELECT json_group_array(DISTINCT json_extract(row_data, '$.city')) FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "Find tech_startup in Berlin",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'tech_startup' AND LOWER(json_extract(row_data, '$.city')) = LOWER('Berlin');"
  },
  {
    "input": "Group restaurant_company cities into JSON array",
    "sql": "SELECT json_group_array(DISTINCT json_extract(row_data, '$.city')) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Group restaurant_company cities into JSON array",
    "sql": "SELECT json_group_array(DISTINCT json_extract(row_data, '$.city')) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Find restaurant_company with nested keyword London",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND value LIKE '%London%';"
  },
  {
    "input": "List all phone numbers for tech_startup",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Find tech_startup in San Francisco with rating over 3.5",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='tech_startup' AND LOWER(json_extract(row_data, '$.city'))=LOWER('San Francisco') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 3.5;"
  },
  {
    "input": "Pretty print JSON of first software_company",
    "sql": "SELECT json_pretty(row_data) FROM nosql_store WHERE table_name='software_company' LIMIT 1;"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Group restaurant_company cities into JSON array",
    "sql": "SELECT json_group_array(DISTINCT json_extract(row_data, '$.city')) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Patch restaurant_company with verified true",
    "sql": "SELECT json_patch(row_data, '{\"verified\":true}') FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Find tech_startup in London with rating over 4.7",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='tech_startup' AND LOWER(json_extract(row_data, '$.city'))=LOWER('London') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.7;"
  },
  {
    "input": "List all phone numbers for retail_store",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'retail_store';"
  },
  {
    "input": "List all founders of tech_startup",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Find tech_startup in Paris",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'tech_startup' AND LOWER(json_extract(row_data, '$.city')) = LOWER('Paris');"
  },
  {
    "input": "Group tech_startup cities into JSON array",
    "sql": "SELECT json_group_array(DISTINCT json_extract(row_data, '$.city')) FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "List all phone numbers for restaurant_company",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Patch restaurant_company with verified true",
    "sql": "SELECT json_patch(row_data, '{\"verified\":true}') FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Set default rating 5 for software_company",
    "sql": "SELECT json_set(row_data, '$.rating', 5) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Aggregate all retail_store names into JSON array",
    "sql": "SELECT json_group_array(json_extract(row_data, '$.name')) FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "List all phone numbers for software_company",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'software_company';"
  },
  {
    "input": "Aggregate all retail_store names into JSON array",
    "sql": "SELECT json_group_array(json_extract(row_data, '$.name')) FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Find tech_startup in London with rating over 4.2",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='tech_startup' AND LOWER(json_extract(row_data, '$.city'))=LOWER('London') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.2;"
  },
  {
    "input": "Set default rating 5 for retail_store",
    "sql": "SELECT json_set(row_data, '$.rating', 5) FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "Pretty print JSON of first tech_startup",
    "sql": "SELECT json_pretty(row_data) FROM nosql_store WHERE table_name='tech_startup' LIMIT 1;"
  },
  {
    "input": "Find restaurant_company in Tokyo",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'restaurant_company' AND LOWER(json_extract(row_data, '$.city')) = LOWER('Tokyo');"
  },
  {
    "input": "Group tech_startup cities into JSON array",
    "sql": "SELECT json_group_array(DISTINCT json_extract(row_data, '$.city')) FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "List software_company verified true and rating >= 3.5",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='software_company' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 3.5;"
  },
  {
    "input": "Patch restaurant_company with verified true",
    "sql": "SELECT json_patch(row_data, '{\"verified\":true}') FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Find tech_startup in New York",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'tech_startup' AND LOWER(json_extract(row_data, '$.city')) = LOWER('New York');"
  },
  {
    "input": "Aggregate all restaurant_company names into JSON array",
    "sql": "SELECT json_group_array(json_extract(row_data, '$.name')) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Find restaurant_company with nested keyword London",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND value LIKE '%London%';"
  },
  {
    "input": "Find retail_store with verified field true",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='verified' AND value='true';"
  },
  {
    "input": "List all tech_startup names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Get all nested uuids in software_company",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'software_company' AND key='uuid';"
  },
  {
    "input": "Set default rating 5 for restaurant_company",
    "sql": "SELECT json_set(row_data, '$.rating', 5) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Find retail_store with nested keyword San Francisco",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND value LIKE '%San Francisco%';"
  },
  {
    "input": "List all retail_store names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "Create JSON object of name and rating for all tech_startup",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Get all nested uuids in tech_startup",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND key='uuid';"
  },
  {
    "input": "Create JSON object of name and rating for all software_company",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Get tech_startup where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'tech_startup' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "Patch software_company with verified true",
    "sql": "SELECT json_patch(row_data, '{\"verified\":true}') FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Find tech_startup in London",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'tech_startup' AND LOWER(json_extract(row_data, '$.city')) = LOWER('London');"
  },
  {
    "input": "Show all leaf keys and values for restaurant_company",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND type NOT IN ('object','array');"
  },
  {
    "input": "Create JSON object of name and rating for all retail_store",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "Aggregate all restaurant_company names into JSON array",
    "sql": "SELECT json_group_array(json_extract(row_data, '$.name')) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "List all founders of retail_store",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'retail_store';"
  },
  {
    "input": "Find restaurant_company in Tokyo",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'restaurant_company' AND LOWER(json_extract(row_data, '$.city')) = LOWER('Tokyo');"
  },
  {
    "input": "Get retail_store where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'retail_store' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Find retail_store in New York",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'retail_store' AND LOWER(json_extract(row_data, '$.city')) = LOWER('New York');"
  },
  {
    "input": "Get all nested uuids in retail_store",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='uuid';"
  },
  {
    "input": "Create JSON object of name and rating for all restaurant_company",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Get restaurant_company where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'restaurant_company' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Get software_company where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'software_company' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Find restaurant_company in Paris",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'restaurant_company' AND LOWER(json_extract(row_data, '$.city')) = LOWER('Paris');"
  },
  {
    "input": "Show restaurant_company with rating over 4.0",
    "sql": "SELECT json_extract(row_data, '$.name') AS name, json_extract(row_data, '$.rating') AS rating FROM nosql_store WHERE table_name = 'restaurant_company' AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.0;"
  },
  {
    "input": "Find retail_store with nested keyword Berlin",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND value LIKE '%Berlin%';"
  },
  {
    "input": "Find retail_store with verified field true",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='verified' AND value='true';"
  },
  {
    "input": "Show all leaf keys and values for tech_startup",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND type NOT IN ('object','array');"
  },
  {
    "input": "Show software_company with rating over 5.0",
    "sql": "SELECT json_extract(row_data, '$.name') AS name, json_extract(row_data, '$.rating') AS rating FROM nosql_store WHERE table_name = 'software_company' AND CAST(json_extract(row_data, '$.rating') AS REAL) > 5.0;"
  },
  {
    "input": "Get restaurant_company where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'restaurant_company' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "Patch restaurant_company with verified true",
    "sql": "SELECT json_patch(row_data, '{\"verified\":true}') FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Count how many times email field appears in retail_store",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='email';"
  },
  {
    "input": "Set default rating 5 for retail_store",
    "sql": "SELECT json_set(row_data, '$.rating', 5) FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "Aggregate all software_company names into JSON array",
    "sql": "SELECT json_group_array(json_extract(row_data, '$.name')) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Count how many times email field appears in software_company",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'software_company' AND key='email';"
  },
  {
    "input": "List all founders of retail_store",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'retail_store';"
  },
  {
    "input": "List all phone numbers for tech_startup",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Pretty print JSON of first software_company",
    "sql": "SELECT json_pretty(row_data) FROM nosql_store WHERE table_name='software_company' LIMIT 1;"
  },
  {
    "input": "Show restaurant_company with rating over 4.2",
    "sql": "SELECT json_extract(row_data, '$.name') AS name, json_extract(row_data, '$.rating') AS rating FROM nosql_store WHERE table_name = 'restaurant_company' AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.2;"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Show all leaf keys and values for restaurant_company",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND type NOT IN ('object','array');"
  },
  {
    "input": "Remove temporary_field from software_company",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Find tech_startup in London",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'tech_startup' AND LOWER(json_extract(row_data, '$.city')) = LOWER('London');"
  },
  {
    "input": "Get restaurant_company where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'restaurant_company' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Remove temporary_field from retail_store",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "Find software_company in New York",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'software_company' AND LOWER(json_extract(row_data, '$.city')) = LOWER('New York');"
  },
  {
    "input": "Create JSON object of name and rating for all software_company",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Get tech_startup where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'tech_startup' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Create JSON object of name and rating for all restaurant_company",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Patch tech_startup with verified true",
    "sql": "SELECT json_patch(row_data, '{\"verified\":true}') FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Get retail_store where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'retail_store' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Create JSON object of name and rating for all restaurant_company",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Find restaurant_company with nested keyword Paris",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND value LIKE '%Paris%';"
  },
  {
    "input": "Set default rating 5 for software_company",
    "sql": "SELECT json_set(row_data, '$.rating', 5) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "List all founders of restaurant_company",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Group tech_startup cities into JSON array",
    "sql": "SELECT json_group_array(DISTINCT json_extract(row_data, '$.city')) FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "List software_company verified true and rating >= 3.5",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='software_company' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 3.5;"
  },
  {
    "input": "Find software_company with nested keyword New York",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'software_company' AND value LIKE '%New York%';"
  },
  {
    "input": "Count how many times email field appears in tech_startup",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND key='email';"
  },
  {
    "input": "List all phone numbers for software_company",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'software_company';"
  },
  {
    "input": "Aggregate all software_company names into JSON array",
    "sql": "SELECT json_group_array(json_extract(row_data, '$.name')) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Count how many times email field appears in tech_startup",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND key='email';"
  },
  {
    "input": "Group software_company cities into JSON array",
    "sql": "SELECT json_group_array(DISTINCT json_extract(row_data, '$.city')) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Find retail_store with verified field true",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='verified' AND value='true';"
  },
  {
    "input": "Group restaurant_company cities into JSON array",
    "sql": "SELECT json_group_array(DISTINCT json_extract(row_data, '$.city')) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Remove temporary_field from restaurant_company",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Show all leaf keys and values for software_company",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'software_company' AND type NOT IN ('object','array');"
  },
  {
    "input": "Patch software_company with verified true",
    "sql": "SELECT json_patch(row_data, '{\"verified\":true}') FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Find tech_startup with nested keyword Chicago",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND value LIKE '%Chicago%';"
  },
  {
    "input": "Find restaurant_company with verified field true",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND key='verified' AND value='true';"
  },
  {
    "input": "Create JSON object of name and rating for all tech_startup",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "List all founders of tech_startup",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Find tech_startup in Woking with rating over 3.5",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='tech_startup' AND LOWER(json_extract(row_data, '$.city'))=LOWER('Woking') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 3.5;"
  },
  {
    "input": "Create JSON object of name and rating for all restaurant_company",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Find software_company with nested keyword Paris",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'software_company' AND value LIKE '%Paris%';"
  },
  {
    "input": "Patch restaurant_company with verified true",
    "sql": "SELECT json_patch(row_data, '{\"verified\":true}') FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "List all phone numbers for restaurant_company",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "List restaurant_company verified true and rating >= 4.7",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='restaurant_company' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 4.7;"
  },
  {
    "input": "Find retail_store with verified field true",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='verified' AND value='true';"
  },
  {
    "input": "Find restaurant_company with nested keyword Paris",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND value LIKE '%Paris%';"
  },
  {
    "input": "Pretty print JSON of first restaurant_company",
    "sql": "SELECT json_pretty(row_data) FROM nosql_store WHERE table_name='restaurant_company' LIMIT 1;"
  },
  {
    "input": "Show software_company with rating over 4.2",
    "sql": "SELECT json_extract(row_data, '$.name') AS name, json_extract(row_data, '$.rating') AS rating FROM nosql_store WHERE table_name = 'software_company' AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.2;"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Find software_company in New York with rating over 4.0",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='software_company' AND LOWER(json_extract(row_data, '$.city'))=LOWER('New York') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.0;"
  },
  {
    "input": "Remove temporary_field from retail_store",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "Set default rating 5 for retail_store",
    "sql": "SELECT json_set(row_data, '$.rating', 5) FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "List all restaurant_company names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Find tech_startup with verified field true",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND key='verified' AND value='true';"
  },
  {
    "input": "List all retail_store names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "Get software_company where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'software_company' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "Find retail_store in London with rating over 4.0",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='retail_store' AND LOWER(json_extract(row_data, '$.city'))=LOWER('London') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.0;"
  },
  {
    "input": "Find software_company in London",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'software_company' AND LOWER(json_extract(row_data, '$.city')) = LOWER('London');"
  },
  {
    "input": "Set default rating 5 for software_company",
    "sql": "SELECT json_set(row_data, '$.rating', 5) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Get all nested uuids in tech_startup",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND key='uuid';"
  },
  {
    "input": "Get retail_store where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'retail_store' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "Remove temporary_field from software_company",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Find tech_startup with verified field true",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND key='verified' AND value='true';"
  },
  {
    "input": "Find retail_store in Tokyo with rating over 5.0",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='retail_store' AND LOWER(json_extract(row_data, '$.city'))=LOWER('Tokyo') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 5.0;"
  },
  {
    "input": "Get software_company where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'software_company' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Get all nested uuids in retail_store",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='uuid';"
  },
  {
    "input": "List all software_company names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Create JSON object of name and rating for all restaurant_company",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Get software_company where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'software_company' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Create JSON object of name and rating for all software_company",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Find software_company in San Francisco with rating over 4.5",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='software_company' AND LOWER(json_extract(row_data, '$.city'))=LOWER('San Francisco') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.5;"
  },
  {
    "input": "List all tech_startup names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Show all leaf keys and values for tech_startup",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND type NOT IN ('object','array');"
  },
  {
    "input": "List all phone numbers for restaurant_company",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Show restaurant_company with rating over 4.2",
    "sql": "SELECT json_extract(row_data, '$.name') AS name, json_extract(row_data, '$.rating') AS rating FROM nosql_store WHERE table_name = 'restaurant_company' AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.2;"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Find tech_startup in Woking",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'tech_startup' AND LOWER(json_extract(row_data, '$.city')) = LOWER('Woking');"
  },
  {
    "input": "Show all leaf keys and values for retail_store",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND type NOT IN ('object','array');"
  },
  {
    "input": "Group software_company cities into JSON array",
    "sql": "SELECT json_group_array(DISTINCT json_extract(row_data, '$.city')) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "List all phone numbers for restaurant_company",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Get all nested uuids in retail_store",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='uuid';"
  },
  {
    "input": "List all phone numbers for retail_store",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'retail_store';"
  },
  {
    "input": "Get restaurant_company where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'restaurant_company' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "Count how many times email field appears in restaurant_company",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND key='email';"
  },
  {
    "input": "List all founders of tech_startup",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Show software_company with rating over 5.0",
    "sql": "SELECT json_extract(row_data, '$.name') AS name, json_extract(row_data, '$.rating') AS rating FROM nosql_store WHERE table_name = 'software_company' AND CAST(json_extract(row_data, '$.rating') AS REAL) > 5.0;"
  },
  {
    "input": "Show all leaf keys and values for restaurant_company",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND type NOT IN ('object','array');"
  },
  {
    "input": "Count how many times email field appears in retail_store",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='email';"
  },
  {
    "input": "Show all leaf keys and values for tech_startup",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND type NOT IN ('object','array');"
  },
  {
    "input": "Remove temporary_field from restaurant_company",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Create JSON object of name and rating for all restaurant_company",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Show all leaf keys and values for retail_store",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND type NOT IN ('object','array');"
  },
  {
    "input": "Remove temporary_field from tech_startup",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Group software_company cities into JSON array",
    "sql": "SELECT json_group_array(DISTINCT json_extract(row_data, '$.city')) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Find restaurant_company with nested keyword Paris",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND value LIKE '%Paris%';"
  },
  {
    "input": "Get tech_startup where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'tech_startup' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Find retail_store with nested keyword Tokyo",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND value LIKE '%Tokyo%';"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Show all leaf keys and values for retail_store",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND type NOT IN ('object','array');"
  },
  {
    "input": "Find tech_startup in Paris",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'tech_startup' AND LOWER(json_extract(row_data, '$.city')) = LOWER('Paris');"
  },
  {
    "input": "Get tech_startup where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'tech_startup' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "Remove temporary_field from retail_store",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Aggregate all restaurant_company names into JSON array",
    "sql": "SELECT json_group_array(json_extract(row_data, '$.name')) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Show all leaf keys and values for software_company",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'software_company' AND type NOT IN ('object','array');"
  },
  {
    "input": "Find restaurant_company in New York with rating over 4.2",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='restaurant_company' AND LOWER(json_extract(row_data, '$.city'))=LOWER('New York') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.2;"
  },
  {
    "input": "Find retail_store in Paris with rating over 3.5",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='retail_store' AND LOWER(json_extract(row_data, '$.city'))=LOWER('Paris') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 3.5;"
  },
  {
    "input": "Get retail_store where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'retail_store' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Remove temporary_field from software_company",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "List all founders of retail_store",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'retail_store';"
  },
  {
    "input": "Create JSON object of name and rating for all restaurant_company",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Find restaurant_company with verified field true",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND key='verified' AND value='true';"
  },
  {
    "input": "Get restaurant_company where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'restaurant_company' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Get tech_startup where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'tech_startup' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Find software_company in London with rating over 4.7",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='software_company' AND LOWER(json_extract(row_data, '$.city'))=LOWER('London') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.7;"
  },
  {
    "input": "Pretty print JSON of first retail_store",
    "sql": "SELECT json_pretty(row_data) FROM nosql_store WHERE table_name='retail_store' LIMIT 1;"
  },
  {
    "input": "Pretty print JSON of first restaurant_company",
    "sql": "SELECT json_pretty(row_data) FROM nosql_store WHERE table_name='restaurant_company' LIMIT 1;"
  },
  {
    "input": "List tech_startup verified true and rating >= 4.0",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='tech_startup' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 4.0;"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Find tech_startup with verified field true",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND key='verified' AND value='true';"
  },
  {
    "input": "Count how many times email field appears in retail_store",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='email';"
  },
  {
    "input": "List all phone numbers for retail_store",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'retail_store';"
  },
  {
    "input": "List all phone numbers for software_company",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'software_company';"
  },
  {
    "input": "Patch retail_store with verified true",
    "sql": "SELECT json_patch(row_data, '{\"verified\":true}') FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "List all phone numbers for restaurant_company",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Remove temporary_field from restaurant_company",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "List all founders of software_company",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'software_company';"
  },
  {
    "input": "Get software_company where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'software_company' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "List all founders of retail_store",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'retail_store';"
  },
  {
    "input": "Get retail_store where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'retail_store' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Show software_company with rating over 5.0",
    "sql": "SELECT json_extract(row_data, '$.name') AS name, json_extract(row_data, '$.rating') AS rating FROM nosql_store WHERE table_name = 'software_company' AND CAST(json_extract(row_data, '$.rating') AS REAL) > 5.0;"
  },
  {
    "input": "Get all nested uuids in retail_store",
    "sql": "SELECT DISTINCT value FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='uuid';"
  },
  {
    "input": "Count how many times email field appears in software_company",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'software_company' AND key='email';"
  },
  {
    "input": "Group restaurant_company cities into JSON array",
    "sql": "SELECT json_group_array(DISTINCT json_extract(row_data, '$.city')) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "List all tech_startup names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "List all software_company names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Patch retail_store with verified true",
    "sql": "SELECT json_patch(row_data, '{\"verified\":true}') FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "List all phone numbers for tech_startup",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Find tech_startup with nested keyword Chicago",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND value LIKE '%Chicago%';"
  },
  {
    "input": "Count how many times email field appears in tech_startup",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND key='email';"
  },
  {
    "input": "Patch retail_store with verified true",
    "sql": "SELECT json_patch(row_data, '{\"verified\":true}') FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "Find software_company with verified field true",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'software_company' AND key='verified' AND value='true';"
  },
  {
    "input": "List all founders of tech_startup",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'tech_startup';"
  },
  {
    "input": "List restaurant_company verified true and rating >= 3.5",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='restaurant_company' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 3.5;"
  },
  {
    "input": "Find software_company in Tokyo",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'software_company' AND LOWER(json_extract(row_data, '$.city')) = LOWER('Tokyo');"
  },
  {
    "input": "Find restaurant_company in Woking",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'restaurant_company' AND LOWER(json_extract(row_data, '$.city')) = LOWER('Woking');"
  },
  {
    "input": "Show restaurant_company with rating over 5.0",
    "sql": "SELECT json_extract(row_data, '$.name') AS name, json_extract(row_data, '$.rating') AS rating FROM nosql_store WHERE table_name = 'restaurant_company' AND CAST(json_extract(row_data, '$.rating') AS REAL) > 5.0;"
  },
  {
    "input": "Remove temporary_field from software_company",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "List restaurant_company verified true and rating >= 4.2",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='restaurant_company' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 4.2;"
  },
  {
    "input": "Aggregate all software_company names into JSON array",
    "sql": "SELECT json_group_array(json_extract(row_data, '$.name')) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Remove temporary_field from tech_startup",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Aggregate all software_company names into JSON array",
    "sql": "SELECT json_group_array(json_extract(row_data, '$.name')) FROM nosql_store WHERE table_name = 'software_company';"
  },
  {
    "input": "Remove temporary_field from retail_store",
    "sql": "SELECT json_remove(row_data, '$.temporary_field') FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "Get restaurant_company where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'restaurant_company' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "Group tech_startup cities into JSON array",
    "sql": "SELECT json_group_array(DISTINCT json_extract(row_data, '$.city')) FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Create JSON object of name and rating for all restaurant_company",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "List all founders of software_company",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'software_company';"
  },
  {
    "input": "Find retail_store with verified field true",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND key='verified' AND value='true';"
  },
  {
    "input": "Show software_company with rating over 3.5",
    "sql": "SELECT json_extract(row_data, '$.name') AS name, json_extract(row_data, '$.rating') AS rating FROM nosql_store WHERE table_name = 'software_company' AND CAST(json_extract(row_data, '$.rating') AS REAL) > 3.5;"
  },
  {
    "input": "List all phone numbers for software_company",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'software_company';"
  },
  {
    "input": "List all phone numbers for retail_store",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'retail_store';"
  },
  {
    "input": "Show all leaf keys and values for restaurant_company",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND type NOT IN ('object','array');"
  },
  {
    "input": "Get restaurant_company where a phone number starts with '+44'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'restaurant_company' AND json_each.value LIKE '+44%';"
  },
  {
    "input": "Pretty print JSON of first retail_store",
    "sql": "SELECT json_pretty(row_data) FROM nosql_store WHERE table_name='retail_store' LIMIT 1;"
  },
  {
    "input": "Show all leaf keys and values for retail_store",
    "sql": "SELECT rowid, fullkey, value FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND type NOT IN ('object','array');"
  },
  {
    "input": "Find restaurant_company in London",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'restaurant_company' AND LOWER(json_extract(row_data, '$.city')) = LOWER('London');"
  },
  {
    "input": "Find restaurant_company with verified field true",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND key='verified' AND value='true';"
  },
  {
    "input": "Find software_company in San Francisco with rating over 4.2",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='software_company' AND LOWER(json_extract(row_data, '$.city'))=LOWER('San Francisco') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.2;"
  },
  {
    "input": "Patch restaurant_company with verified true",
    "sql": "SELECT json_patch(row_data, '{\"verified\":true}') FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "List all retail_store names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "Aggregate all restaurant_company names into JSON array",
    "sql": "SELECT json_group_array(json_extract(row_data, '$.name')) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Count how many times email field appears in software_company",
    "sql": "SELECT COUNT(*) FROM nosql_store, json_tree(row_data) WHERE table_name = 'software_company' AND key='email';"
  },
  {
    "input": "List all founders of restaurant_company",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "List all founders of tech_startup",
    "sql": "SELECT json_each.value AS founder FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Patch retail_store with verified true",
    "sql": "SELECT json_patch(row_data, '{\"verified\":true}') FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "Find software_company in San Francisco with rating over 4.2",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='software_company' AND LOWER(json_extract(row_data, '$.city'))=LOWER('San Francisco') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.2;"
  },
  {
    "input": "Set default rating 5 for restaurant_company",
    "sql": "SELECT json_set(row_data, '$.rating', 5) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Show restaurant_company with rating over 4.0",
    "sql": "SELECT json_extract(row_data, '$.name') AS name, json_extract(row_data, '$.rating') AS rating FROM nosql_store WHERE table_name = 'restaurant_company' AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.0;"
  },
  {
    "input": "Find software_company in Paris with rating over 4.0",
    "sql": "SELECT json_extract(row_data, '$.name') FROM nosql_store WHERE table_name='software_company' AND LOWER(json_extract(row_data, '$.city'))=LOWER('Paris') AND CAST(json_extract(row_data, '$.rating') AS REAL) > 4.0;"
  },
  {
    "input": "Find tech_startup in San Francisco",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'tech_startup' AND LOWER(json_extract(row_data, '$.city')) = LOWER('San Francisco');"
  },
  {
    "input": "List all retail_store names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "List software_company verified true and rating >= 3.5",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='software_company' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 3.5;"
  },
  {
    "input": "Get retail_store where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'retail_store' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "Find retail_store with nested keyword Berlin",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'retail_store' AND value LIKE '%Berlin%';"
  },
  {
    "input": "Get software_company where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'software_company' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "List all phone numbers for software_company",
    "sql": "SELECT json_each.value AS phone FROM nosql_store, json_each(json_extract(row_data, '$.phones')) WHERE table_name = 'software_company';"
  },
  {
    "input": "List all tech_startup names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Find invalid JSON rows",
    "sql": "SELECT rowid, row_data FROM nosql_store WHERE json_valid(row_data)=0;"
  },
  {
    "input": "Create JSON object of name and rating for all restaurant_company",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'restaurant_company';"
  },
  {
    "input": "Pretty print JSON of first restaurant_company",
    "sql": "SELECT json_pretty(row_data) FROM nosql_store WHERE table_name='restaurant_company' LIMIT 1;"
  },
  {
    "input": "Pretty print JSON of first tech_startup",
    "sql": "SELECT json_pretty(row_data) FROM nosql_store WHERE table_name='tech_startup' LIMIT 1;"
  },
  {
    "input": "Find tech_startup with verified field true",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'tech_startup' AND key='verified' AND value='true';"
  },
  {
    "input": "Find restaurant_company with verified field true",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name = 'restaurant_company' AND key='verified' AND value='true';"
  },
  {
    "input": "Get tech_startup where any founder starts with 'A'",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_each(json_extract(row_data, '$.founders')) WHERE table_name = 'tech_startup' AND json_each.value LIKE 'A%';"
  },
  {
    "input": "List all tech_startup names",
    "sql": "SELECT json_extract(row_data, '$.name') AS name FROM nosql_store WHERE table_name = 'tech_startup';"
  },
  {
    "input": "Create JSON object of name and rating for all retail_store",
    "sql": "SELECT json_group_array(json_object('name', json_extract(row_data, '$.name'), 'rating', json_extract(row_data, '$.rating'))) FROM nosql_store WHERE table_name = 'retail_store';"
  },
  {
    "input": "Pretty print JSON of first tech_startup",
    "sql": "SELECT json_pretty(row_data) FROM nosql_store WHERE table_name='tech_startup' LIMIT 1;"
  },
  {
    "input": "List software_company verified true and rating >= 4.5",
    "sql": "SELECT DISTINCT json_extract(row_data, '$.name') FROM nosql_store, json_tree(row_data) WHERE table_name='software_company' AND key='verified' AND value='true' AND CAST(json_extract(row_data, '$.rating') AS REAL) >= 4.5;"
  },
  {
    "input": "Patch restaurant_company with verified true",
    "sql": "SELECT json_patch(row_data, '{\"verified\":true}') FROM nosql_store WHERE table_name = 'restaurant_company';"
  }
]